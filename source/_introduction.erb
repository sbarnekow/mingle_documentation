# Introduction

```shell
curl -X GET https://user:password@your.mingle.server:8080/api/v2/projects/my_project/cards/1.xml 

```

```ruby
require "uri"
require "net/https"
require "time"
require "rubygems"
require "api_auth"
 
MINGLE_URL = "https://your-org.mingle-api.thoughtworks.com/api/v2/projects.xml"
 
access_key_id = "your_username"
secret_access_key = "???????????????"
 
uri = URI.parse(MINGLE_URL)
http = Net::HTTP.new(uri.host, uri.port)
http.use_ssl = true
 
request = Net::HTTP::Get.new(uri.request_uri)
ApiAuth.sign!(request, access_key_id, secret_access_key)
 
response = http.request(request)
puts response.body

```

RESTful APIs offer a convenient way to integrate networked systems.

Mingle provides a RESTful API through which you can access and manipulate various kinds of resources. Cards, transitions and users are the kinds of resources that are available in this version of the API

The following sections will walk you through the various resources and the operations that are supported on each of them.

The Mingle API provides access to various kinds of resources in Mingle over HTTP. These resources are available as both json and xml documents. The standard HTTP operations of GET, POST, PUT and DELETE are used to support read, create, update and delete.

Hence performing a GET operation for a card resource would be the equivalent of reading that card, performing a PUT on a user would be the equivalent of updating that user; and so on.

Not all resources support all the operations, as sometimes it doesn't make sense within Mingle to allow those operations
An example is performing a DELETE on a user resource, as users in Mingle cannot be deleted.